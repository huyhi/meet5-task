<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hongye.dao.UserActionDAO">

    <!--
        retrieve all profile visitors of a user and sort it by updated_at field,

        when a user check its visitors may want to sort it by time of viewing.
        Meanwhile, I created a composite index for the 'to_id' and 'updated_at' fields,
        so the efficiency of this sorting will be relatively high.
    -->
    <!--
        P.S. Cannot select distinct user_id with order by recorded_at clause, it would encounter a MySQL syntax error
        Below is the best way to retrieve all the distinct visitors and order by recorded_at I can figure out.
    -->
    <select id="allVisitors" resultType="com.hongye.model.User">
        select
            id, username, occupation, avatar, email, gender, status, description, birthday,
            created_at as createdAt,
            updated_at as updatedAt
        from user
        <where>
            id in (
                select
                    r.from_id
                from user_action_record as r
                where
                    r.to_id = #{userId} and
                    r.type = 0          <!-- type 0 stands for visitor -->
                group by r.from_id
                order by max(r.recorded_at) desc
            )
        </where>
    </select>

    <insert id="singleInsert">
        insert into user_action_record
        (
            from_id, to_id, type
        )
        values
        (
            #{fromId}, #{toId}, #{type}
        )
    </insert>

    <select id="distinctUserCount" resultType="int">
        select count(distinct to_id) from user_action_record
        <where>
            from_id = #{fromId} and
            recorded_at between #{timeLower} and #{timeUpper}
        </where>
    </select>

</mapper>